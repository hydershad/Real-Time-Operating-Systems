


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    3 00000000                 PRESERVE8
    4 00000000                 THUMB
    5 00000000         ;EXPORT OS
    6 00000000                 EXTERN           RunPt
    7 00000000                 EXTERN           priorityPts
    8 00000000                 EXTERN           NextRunPt   ; point to next thr
                                                            ead to run
    9 00000000                 EXPORT           StartOS
   10 00000000                 EXPORT           SysTick_Handler
   11 00000000                 EXPORT           SVC_Handler
   12 00000000         
   13 00000000                 EXTERN           OS_Id
   14 00000000                 EXTERN           OS_Kill
   15 00000000                 EXTERN           OS_Sleep
   16 00000000                 EXTERN           OS_Time
   17 00000000                 EXTERN           OS_AddThread1
   18 00000000         
   19 00000000         ;EXPORT OS_Wait
   20 00000000         ;EXPORT OS_Signal
   21 00000000         
   22 00000000 482A    StartOS LDR              R0, =RunPt
   23 00000002 6802            LDR              R2, [R0]
   24 00000004 F8D2 D000       LDR              SP, [R2]
   25 00000008 E8BD 0FF0       POP              {R4-R11}
   26 0000000C BC0F            POP              {R0-R3}
   27 0000000E F85D CB04       POP              {R12}
   28 00000012 F85D EB04       POP              {LR}
   29 00000016 F85D EB04       POP              {LR}
   30 0000001A BC02            POP              {R1}
   31 0000001C B662            CPSIE            I
   32 0000001E 4770            BX               LR
   33 00000020         
   34 00000020         SysTick_Handler
   35 00000020 B672            CPSID            I
   36 00000022 E92D 0FF0       PUSH             {R4-R11}
   37 00000026 4821            LDR              R0, =RunPt
   38 00000028 6801            LDR              R1, [R0]
   39 0000002A F8C1 D000       STR              SP, [R1]
   40 0000002E 694A            LDR              R2, [R1, #20] ;loads priority i
                                                            nto R2
   41 00000030 F04F 33FF       MOV              R3, #-1
   42 00000034 481E            LDR              R0, =priorityPts
   43 00000036 F2A0 0004       ADD              R0, R0, #-4 ; need to subtract 
                                                            4 to loop correctly
                                                            
   44 0000003A         
   45 0000003A         checkAgain
   46 0000003A F103 0301       ADD              R3, R3, #1  ; assumes there wil
                                                            l always be a threa
                                                            d running
   47 0000003E F100 0004       ADD              R0, R0, #4
   48 00000042 6801            LDR              R1, [R0]    ; offset of 4 times
                                                             the index because 
                                                            of pointer size
   49 00000044 2900            CMP              R1, #0
   50 00000046 D0F8            BEQ              checkAgain  ;if pointer is null



ARM Macro Assembler    Page 2 


                                                             we check next prio
                                                            rity list
   51 00000048 4818            LDR              R0, =RunPt
   52 0000004A         ;LDR R1, [R1]
   53 0000004A         ;LDR R3, [R1, #20] ;loads priority of whatever priority 
                       thread we are looking at
   54 0000004A 4293            CMP              R3, R2
   55 0000004C D101            BNE              skip        ;if they are equal 
                                                            priority we treat i
                                                            t like normal
   56 0000004E 6801            LDR              R1, [R0]    ;same priority norm
                                                            al context switch
   57 00000050 6849            LDR              R1, [R1, #4]
   58 00000052         skip
   59 00000052 6001            STR              R1, [R0]    ;higher priority re
                                                            ady to go
   60 00000054 F8D1 D000       LDR              SP, [R1]
   61 00000058 E8BD 0FF0       POP              {R4-R11}
   62 0000005C B662            CPSIE            I
   63 0000005E 4770            BX               LR
   64 00000060         
   65 00000060         
   66 00000060         SVC_Handler
   67 00000060 F8DD C018       LDR              R12, [SP, #24] ; RETURN ADDRESS
                                                            
   68 00000064 F83C CC02       LDRH             R12, [R12, #-2] ; SVC INSTRUCTI
                                                            ON 2 BYTES
   69 00000068 F42C 4C7F       BIC              R12, #0xFF00 ; EXTRACT TRAP NUM
                                                            BER IN R12
   70 0000006C E89D 000F       LDM              SP, {R0-R3} ; GET PARAMETERS
   71 00000070         
   72 00000070 B500            PUSH             {LR}
   73 00000072         
   74 00000072 F8DF E040       LDR              LR, = Return ;store link to com
                                                            e back to end of sv
                                                            c handler
   75 00000076 F1BC 0F00       CMP              R12, #0
   76 0000007A F43F AFFE       BEQ              OS_Id       ;case statement bas
                                                            ed on svc call argu
                                                            ment
   77 0000007E F1BC 0F01       CMP              R12, #1
   78 00000082 F43F AFFE       BEQ              OS_Kill
   79 00000086 F1BC 0F02       CMP              R12, #2
   80 0000008A F43F AFFE       BEQ              OS_Sleep
   81 0000008E F1BC 0F03       CMP              R12, #3
   82 00000092 F43F AFFE       BEQ              OS_Time
   83 00000096 F1BC 0F04       CMP              R12, #4
   84 0000009A F43F AFFE       BEQ              OS_AddThread1
   85 0000009E         
   86 0000009E F85D EB04 
                       Return  POP              {LR}        ;RETURN TO PROCESS 
                                                            LINK
   87 000000A2 9000            STR              R0,[SP]     ; Store return valu
                                                            e in R0 for process
                                                             to view
   88 000000A4 4770            BX               LR          ; Return from excep
                                                            tion
   89 000000A6         ;ADD STUFF?
   90 000000A6         



ARM Macro Assembler    Page 3 


   91 000000A6         
   92 000000A6         ;RUNS THE OS FUNCTION
   93 000000A6 9000            STR              R0, [SP]    ;RETURN STORE RETUR
                                                            N VALUE FROM OS FUN
                                                            CTION
   94 000000A8 4770            BX               LR          ;RETURN TO THE USER
                                                            PROCESS/OS_SUSPEND
   95 000000AA         
   96 000000AA         
   97 000000AA         
   98 000000AA         
   99 000000AA         ;OS_Wait ;R0 points to counter
  100 000000AA         ;LDREX R1, [R0] ; counter 
  101 000000AA         ;SUBS R1, #1 ; counter -1, 
  102 000000AA         ;ITT PL ; ok if >= 0 
  103 000000AA         ;STREXPL R2,R1,[R0] ; try update 
  104 000000AA         ;CMPPL R2, #0 ; succeed? 
  105 000000AA         ;BNE OS_Wait ; no, try again 
  106 000000AA         ;BX LR 
  107 000000AA         
  108 000000AA         
  109 000000AA         
  110 000000AA         ;OS_Signal ; R0 points to counter 
  111 000000AA         ;LDREX R1, [R0] ; counter 
  112 000000AA         ;ADD R1, #1 ; counter + 1 
  113 000000AA         ;STREX R2,R1,[R0] ; try update 
  114 000000AA         ;CMP R2, #0 ; succeed? 
  115 000000AA         ;BNE OS_Signal ;no, try again 
  116 000000AA         ;BX LR
  117 000000AA         
  118 000000AA         
  119 000000AA 00 00           ALIGN
  120 000000AC                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\os_asm
.d -o.\os_asm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\AR
M\Inc\Luminary --list=.\os_asm.lst OS_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file OS_asm.s
   Uses
      None
Comment: .text unused
Return 0000009E

Symbol: Return
   Definitions
      At line 86 in file OS_asm.s
   Uses
      At line 74 in file OS_asm.s
Comment: Return used once
SVC_Handler 00000060

Symbol: SVC_Handler
   Definitions
      At line 66 in file OS_asm.s
   Uses
      At line 11 in file OS_asm.s
Comment: SVC_Handler used once
StartOS 00000000

Symbol: StartOS
   Definitions
      At line 22 in file OS_asm.s
   Uses
      At line 9 in file OS_asm.s
Comment: StartOS used once
SysTick_Handler 00000020

Symbol: SysTick_Handler
   Definitions
      At line 34 in file OS_asm.s
   Uses
      At line 10 in file OS_asm.s
Comment: SysTick_Handler used once
checkAgain 0000003A

Symbol: checkAgain
   Definitions
      At line 45 in file OS_asm.s
   Uses
      At line 50 in file OS_asm.s
Comment: checkAgain used once
skip 00000052

Symbol: skip
   Definitions
      At line 58 in file OS_asm.s
   Uses
      At line 55 in file OS_asm.s
Comment: skip used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

NextRunPt 00000000

Symbol: NextRunPt
   Definitions
      At line 8 in file OS_asm.s
   Uses
      None
Comment: NextRunPt unused
OS_AddThread1 00000000

Symbol: OS_AddThread1
   Definitions
      At line 17 in file OS_asm.s
   Uses
      At line 84 in file OS_asm.s
Comment: OS_AddThread1 used once
OS_Id 00000000

Symbol: OS_Id
   Definitions
      At line 13 in file OS_asm.s
   Uses
      At line 76 in file OS_asm.s
Comment: OS_Id used once
OS_Kill 00000000

Symbol: OS_Kill
   Definitions
      At line 14 in file OS_asm.s
   Uses
      At line 78 in file OS_asm.s
Comment: OS_Kill used once
OS_Sleep 00000000

Symbol: OS_Sleep
   Definitions
      At line 15 in file OS_asm.s
   Uses
      At line 80 in file OS_asm.s
Comment: OS_Sleep used once
OS_Time 00000000

Symbol: OS_Time
   Definitions
      At line 16 in file OS_asm.s
   Uses
      At line 82 in file OS_asm.s
Comment: OS_Time used once
RunPt 00000000

Symbol: RunPt
   Definitions
      At line 6 in file OS_asm.s
   Uses
      At line 22 in file OS_asm.s
      At line 37 in file OS_asm.s
      At line 51 in file OS_asm.s

priorityPts 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: priorityPts
   Definitions
      At line 7 in file OS_asm.s
   Uses
      At line 42 in file OS_asm.s
Comment: priorityPts used once
8 symbols
347 symbols in table
